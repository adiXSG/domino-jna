package com.mindoo.domino.jna.constants;

import java.util.HashMap;
import java.util.Map;

import com.mindoo.domino.jna.internal.NotesCAPI;

/**
 * Enum with all available CD record types, which are the building blocks of Notes Richtext.
 * 
 * @author Karsten Lehmann
 */
public enum CDRecordType {
	PDEF_MAIN(NotesCAPI.SIG_CD_PDEF_MAIN),
	PDEF_TYPE(NotesCAPI.SIG_CD_PDEF_TYPE),
	PDEF_PROPERTY(NotesCAPI.SIG_CD_PDEF_PROPERTY),
	PDEF_ACTION(NotesCAPI.SIG_CD_PDEF_ACTION),
	TABLECELL_DATAFLAGS(NotesCAPI.SIG_CD_TABLECELL_DATAFLAGS),
	EMBEDDEDCONTACTLIST(NotesCAPI.SIG_CD_EMBEDDEDCONTACTLIST),
	IGNORE(NotesCAPI.SIG_CD_IGNORE),
	TABLECELL_HREF2(NotesCAPI.SIG_CD_TABLECELL_HREF2),
	HREFBORDER(NotesCAPI.SIG_CD_HREFBORDER),
	TABLEDATAEXTENSION(NotesCAPI.SIG_CD_TABLEDATAEXTENSION),
	EMBEDDEDCALCTL(NotesCAPI.SIG_CD_EMBEDDEDCALCTL),
	ACTIONEXT(NotesCAPI.SIG_CD_ACTIONEXT),
	EVENT_LANGUAGE_ENTRY(NotesCAPI.SIG_CD_EVENT_LANGUAGE_ENTRY),
	FILESEGMENT(NotesCAPI.SIG_CD_FILESEGMENT),
	FILEHEADER(NotesCAPI.SIG_CD_FILEHEADER),
	DATAFLAGS(NotesCAPI.SIG_CD_DATAFLAGS),
	BACKGROUNDPROPERTIES(NotesCAPI.SIG_CD_BACKGROUNDPROPERTIES),
	EMBEDEXTRA_INFO(NotesCAPI.SIG_CD_EMBEDEXTRA_INFO),
	CLIENT_BLOBPART(NotesCAPI.SIG_CD_CLIENT_BLOBPART),
	CLIENT_EVENT(NotesCAPI.SIG_CD_CLIENT_EVENT),
	BORDERINFO_HS(NotesCAPI.SIG_CD_BORDERINFO_HS),
	LARGE_PARAGRAPH(NotesCAPI.SIG_CD_LARGE_PARAGRAPH),
	EXT_EMBEDDEDSCHED(NotesCAPI.SIG_CD_EXT_EMBEDDEDSCHED),
	BOXSIZE(NotesCAPI.SIG_CD_BOXSIZE),
	POSITIONING(NotesCAPI.SIG_CD_POSITIONING),
	LAYER(NotesCAPI.SIG_CD_LAYER),
	DECSFIELD(NotesCAPI.SIG_CD_DECSFIELD),
	SPAN_END(NotesCAPI.SIG_CD_SPAN_END),
	SPAN_BEGIN(NotesCAPI.SIG_CD_SPAN_BEGIN),
	TEXTPROPERTIESTABLE(NotesCAPI.SIG_CD_TEXTPROPERTIESTABLE),
	HREF2(NotesCAPI.SIG_CD_HREF2),
	BACKGROUNDCOLOR(NotesCAPI.SIG_CD_BACKGROUNDCOLOR),
	INLINE(NotesCAPI.SIG_CD_INLINE),
	V6HOTSPOTBEGIN_CONTINUATION(NotesCAPI.SIG_CD_V6HOTSPOTBEGIN_CONTINUATION),
	TARGET_DBLCLK(NotesCAPI.SIG_CD_TARGET_DBLCLK),
	CAPTION(NotesCAPI.SIG_CD_CAPTION),
	LINKCOLORS(NotesCAPI.SIG_CD_LINKCOLORS),
	TABLECELL_HREF(NotesCAPI.SIG_CD_TABLECELL_HREF),
	ACTIONBAREXT(NotesCAPI.SIG_CD_ACTIONBAREXT),
	IDNAME(NotesCAPI.SIG_CD_IDNAME),
	TABLECELL_IDNAME(NotesCAPI.SIG_CD_TABLECELL_IDNAME),
	IMAGESEGMENT(NotesCAPI.SIG_CD_IMAGESEGMENT),
	IMAGEHEADER(NotesCAPI.SIG_CD_IMAGEHEADER),
	V5HOTSPOTBEGIN(NotesCAPI.SIG_CD_V5HOTSPOTBEGIN),
	V5HOTSPOTEND(NotesCAPI.SIG_CD_V5HOTSPOTEND),
	TEXTPROPERTY(NotesCAPI.SIG_CD_TEXTPROPERTY),
	PARAGRAPH(NotesCAPI.SIG_CD_PARAGRAPH),
	PABDEFINITION(NotesCAPI.SIG_CD_PABDEFINITION),
	PABREFERENCE(NotesCAPI.SIG_CD_PABREFERENCE),
	TEXT(NotesCAPI.SIG_CD_TEXT),
	HEADER(NotesCAPI.SIG_CD_HEADER),
	LINKEXPORT2(NotesCAPI.SIG_CD_LINKEXPORT2),
	BITMAPHEADER(NotesCAPI.SIG_CD_BITMAPHEADER),
	BITMAPSEGMENT(NotesCAPI.SIG_CD_BITMAPSEGMENT),
	COLORTABLE(NotesCAPI.SIG_CD_COLORTABLE),
	GRAPHIC(NotesCAPI.SIG_CD_GRAPHIC),
	PMMETASEG(NotesCAPI.SIG_CD_PMMETASEG),
	WINMETASEG(NotesCAPI.SIG_CD_WINMETASEG),
	MACMETASEG(NotesCAPI.SIG_CD_MACMETASEG),
	CGMMETA(NotesCAPI.SIG_CD_CGMMETA),
	PMMETAHEADER(NotesCAPI.SIG_CD_PMMETAHEADER),
	WINMETAHEADER(NotesCAPI.SIG_CD_WINMETAHEADER),
	MACMETAHEADER(NotesCAPI.SIG_CD_MACMETAHEADER),
	TABLEBEGIN(NotesCAPI.SIG_CD_TABLEBEGIN),
	TABLECELL(NotesCAPI.SIG_CD_TABLECELL),
	TABLEEND(NotesCAPI.SIG_CD_TABLEEND),
	STYLENAME(NotesCAPI.SIG_CD_STYLENAME),
	STORAGELINK(NotesCAPI.SIG_CD_STORAGELINK),
	TRANSPARENTTABLE(NotesCAPI.SIG_CD_TRANSPARENTTABLE),
	HORIZONTALRULE(NotesCAPI.SIG_CD_HORIZONTALRULE),
	ALTTEXT(NotesCAPI.SIG_CD_ALTTEXT),
	ANCHOR(NotesCAPI.SIG_CD_ANCHOR),
	HTMLBEGIN(NotesCAPI.SIG_CD_HTMLBEGIN),
	HTMLEND(NotesCAPI.SIG_CD_HTMLEND),
	HTMLFORMULA(NotesCAPI.SIG_CD_HTMLFORMULA),
	NESTEDTABLEBEGIN(NotesCAPI.SIG_CD_NESTEDTABLEBEGIN),
	NESTEDTABLECELL(NotesCAPI.SIG_CD_NESTEDTABLECELL),
	NESTEDTABLEEND(NotesCAPI.SIG_CD_NESTEDTABLEEND),
	COLOR(NotesCAPI.SIG_CD_COLOR),
	TABLECELL_COLOR(NotesCAPI.SIG_CD_TABLECELL_COLOR),

	BLOBPART(NotesCAPI.SIG_CD_BLOBPART),
	BEGIN(NotesCAPI.SIG_CD_BEGIN),
	END(NotesCAPI.SIG_CD_END),
	VERTICALALIGN(NotesCAPI.SIG_CD_VERTICALALIGN),
	FLOATPOSITION(NotesCAPI.SIG_CD_FLOATPOSITION),
	TIMERINFO(NotesCAPI.SIG_CD_TIMERINFO),
	TABLEROWHEIGHT(NotesCAPI.SIG_CD_TABLEROWHEIGHT),
	TABLELABEL(NotesCAPI.SIG_CD_TABLELABEL),
	BIDI_TEXT(NotesCAPI.SIG_CD_BIDI_TEXT),
	BIDI_TEXTEFFECT(NotesCAPI.SIG_CD_BIDI_TEXTEFFECT),
	REGIONBEGIN(NotesCAPI.SIG_CD_REGIONBEGIN),
	REGIONEND(NotesCAPI.SIG_CD_REGIONEND),
	TRANSITION(NotesCAPI.SIG_CD_TRANSITION),
	FIELDHINT(NotesCAPI.SIG_CD_FIELDHINT),
	PLACEHOLDER(NotesCAPI.SIG_CD_PLACEHOLDER),
	EMBEDDEDOUTLINE(NotesCAPI.SIG_CD_EMBEDDEDOUTLINE),
	EMBEDDEDVIEW(NotesCAPI.SIG_CD_EMBEDDEDVIEW),
	CELLBACKGROUNDDATA(NotesCAPI.SIG_CD_CELLBACKGROUNDDATA),

	/* Signatures for Frameset CD records */
	FRAMESETHEADER(NotesCAPI.SIG_CD_FRAMESETHEADER),
	FRAMESET(NotesCAPI.SIG_CD_FRAMESET),
	FRAME(NotesCAPI.SIG_CD_FRAME),
	/* Signature for Target Frame info on a link	*/
	TARGET(NotesCAPI.SIG_CD_TARGET),
	MAPELEMENT(NotesCAPI.SIG_CD_MAPELEMENT),
	AREAELEMENT(NotesCAPI.SIG_CD_AREAELEMENT),
	HREF(NotesCAPI.SIG_CD_HREF),
	EMBEDDEDCTL(NotesCAPI.SIG_CD_EMBEDDEDCTL),
	HTML_ALTTEXT(NotesCAPI.SIG_CD_HTML_ALTTEXT),
	EVENT(NotesCAPI.SIG_CD_EVENT),
	PRETABLEBEGIN(NotesCAPI.SIG_CD_PRETABLEBEGIN),
	BORDERINFO(NotesCAPI.SIG_CD_BORDERINFO),
	EMBEDDEDSCHEDCTL(NotesCAPI.SIG_CD_EMBEDDEDSCHEDCTL),
	EXT2_FIELD(NotesCAPI.SIG_CD_EXT2_FIELD),
	EMBEDDEDEDITCTL(NotesCAPI.SIG_CD_EMBEDDEDEDITCTL),

	/* Signatures for Composite Records that are reserved internal records, */
	/* whose format may change between releases. */
	DOCUMENT_PRE_26(NotesCAPI.SIG_CD_DOCUMENT_PRE_26),
	FIELD_PRE_36(NotesCAPI.SIG_CD_FIELD_PRE_36),
	FIELD(NotesCAPI.SIG_CD_FIELD),
	DOCUMENT(NotesCAPI.SIG_CD_DOCUMENT),
	METAFILE(NotesCAPI.SIG_CD_METAFILE),
	BITMAP(NotesCAPI.SIG_CD_BITMAP),
	FONTTABLE(NotesCAPI.SIG_CD_FONTTABLE),
	LINK(NotesCAPI.SIG_CD_LINK),
	LINKEXPORT(NotesCAPI.SIG_CD_LINKEXPORT),
	KEYWORD(NotesCAPI.SIG_CD_KEYWORD),
	LINK2(NotesCAPI.SIG_CD_LINK2),
	CGM(NotesCAPI.SIG_CD_CGM),
	TIFF(NotesCAPI.SIG_CD_TIFF),
	PATTERNTABLE(NotesCAPI.SIG_CD_PATTERNTABLE),
	DDEBEGIN(NotesCAPI.SIG_CD_DDEBEGIN),
	DDEEND(NotesCAPI.SIG_CD_DDEEND),
	OLEBEGIN(NotesCAPI.SIG_CD_OLEBEGIN),
	OLEEND(NotesCAPI.SIG_CD_OLEEND),
	HOTSPOTBEGIN(NotesCAPI.SIG_CD_HOTSPOTBEGIN),
	HOTSPOTEND(NotesCAPI.SIG_CD_HOTSPOTEND),
	BUTTON(NotesCAPI.SIG_CD_BUTTON),
	BAR(NotesCAPI.SIG_CD_BAR),
	V4HOTSPOTBEGIN(NotesCAPI.SIG_CD_V4HOTSPOTBEGIN),
	V4HOTSPOTEND(NotesCAPI.SIG_CD_V4HOTSPOTEND),
	EXT_FIELD(NotesCAPI.SIG_CD_EXT_FIELD),
	LSOBJECT(NotesCAPI.SIG_CD_LSOBJECT),
	HTMLHEADER(NotesCAPI.SIG_CD_HTMLHEADER),
	HTMLSEGMENT(NotesCAPI.SIG_CD_HTMLSEGMENT),
	LAYOUT(NotesCAPI.SIG_CD_LAYOUT),
	LAYOUTTEXT(NotesCAPI.SIG_CD_LAYOUTTEXT),
	LAYOUTEND(NotesCAPI.SIG_CD_LAYOUTEND),
	LAYOUTFIELD(NotesCAPI.SIG_CD_LAYOUTFIELD),
	PABHIDE(NotesCAPI.SIG_CD_PABHIDE),
	PABFORMREF(NotesCAPI.SIG_CD_PABFORMREF),
	ACTIONBAR(NotesCAPI.SIG_CD_ACTIONBAR),
	ACTION(NotesCAPI.SIG_CD_ACTION),
	DOCAUTOLAUNCH(NotesCAPI.SIG_CD_DOCAUTOLAUNCH),
	LAYOUTGRAPHIC(NotesCAPI.SIG_CD_LAYOUTGRAPHIC),
	OLEOBJINFO(NotesCAPI.SIG_CD_OLEOBJINFO),
	LAYOUTBUTTON(NotesCAPI.SIG_CD_LAYOUTBUTTON),
	TEXTEFFECT(NotesCAPI.SIG_CD_TEXTEFFECT),

	/* Signatures for items of type TYPE_VIEWMAP */
	VMHEADER(NotesCAPI.SIG_CD_VMHEADER),
	VMBITMAP(NotesCAPI.SIG_CD_VMBITMAP),
	VMRECT(NotesCAPI.SIG_CD_VMRECT),
	VMPOLYGON_BYTE(NotesCAPI.SIG_CD_VMPOLYGON_BYTE),
	VMPOLYLINE_BYTE(NotesCAPI.SIG_CD_VMPOLYLINE_BYTE),
	VMREGION(NotesCAPI.SIG_CD_VMREGION),
	VMACTION(NotesCAPI.SIG_CD_VMACTION),
	VMELLIPSE(NotesCAPI.SIG_CD_VMELLIPSE),
	VMRNDRECT(NotesCAPI.SIG_CD_VMRNDRECT),
	VMBUTTON(NotesCAPI.SIG_CD_VMBUTTON),
	VMACTION_2(NotesCAPI.SIG_CD_VMACTION_2),
	VMTEXTBOX(NotesCAPI.SIG_CD_VMTEXTBOX),
	VMPOLYGON(NotesCAPI.SIG_CD_VMPOLYGON),
	VMPOLYLINE(NotesCAPI.SIG_CD_VMPOLYLINE),
	VMPOLYRGN(NotesCAPI.SIG_CD_VMPOLYRGN),
	VMCIRCLE(NotesCAPI.SIG_CD_VMCIRCLE),
	VMPOLYRGN_BYTE(NotesCAPI.SIG_CD_VMPOLYRGN_BYTE),

	/* Signatures for alternate CD sequences*/
	ALTERNATEBEGIN(NotesCAPI.SIG_CD_ALTERNATEBEGIN),
	ALTERNATEEND(NotesCAPI.SIG_CD_ALTERNATEEND),
	OLERTMARKER(NotesCAPI.SIG_CD_OLERTMARKER);
	
	private static Map<Short,CDRecordType> m_recordsByConstant;
	static {
		m_recordsByConstant = new HashMap<Short, CDRecordType>();
		for (CDRecordType currType : values()) {
			m_recordsByConstant.put(currType.getConstant(), currType);
		}
	}
	private short m_val;
	
	CDRecordType(short val) {
		m_val = val;
	}
	
	public short getConstant() {
		return m_val;
	}
	
	public static CDRecordType getRecordForConstant(short constant) {
		return m_recordsByConstant.get(constant);
	}
}
