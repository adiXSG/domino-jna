package com.mindoo.domino.jna.structs;
import java.util.Arrays;
import java.util.List;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class NotesBlockId extends BaseStructure {
	/**
	 * pool handle<br>
	 * C type : DHANDLE
	 */
	public int pool;
	/**
	 * block handle<br>
	 * C type : BLOCK
	 */
	public short block;
	
	public NotesBlockId() {
		super();
//		setAlignType(Structure.ALIGN_NONE);
		
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("pool", "block");
	}
	/**
	 * @param pool pool handle<br>
	 * C type : DHANDLE<br>
	 * @param block block handle<br>
	 * C type : BLOCK
	 */
	public NotesBlockId(int pool, short block) {
		super();
//		setAlignType(Structure.ALIGN_NONE);
		this.pool = pool;
		this.block = block;
	}
	public NotesBlockId(Pointer peer) {
		super(peer);
//		setAlignType(Structure.ALIGN_NONE);
	}
	
	public static class ByReference extends NotesBlockId implements Structure.ByReference {
		
	};
	public static class ByValue extends NotesBlockId implements Structure.ByValue {
		
	};
}
